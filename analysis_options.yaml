include: all_lint_rules.yaml
analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.mocks.dart"
    - "**/l10n/*.dart"
    - "**/generated_plugin_registrant.dart"
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  language:
    strict-inference: true
    strict-raw-types: true
  errors:
    todo: ignore
    fixme: ignore
    # Suppresses warnings caused by rule collisions in `include all_lint_rules`
    included_file_warning: ignore
    # false positive when using Freezed
    invalid_annotation_target: ignore
linter:
  rules:
    # Not work as documented: https://dart-lang.github.io/linter/lints/avoid_returning_null_for_future.html
    avoid_returning_null_for_future: false

    # Conflicts with implicit_dynamic_parameter, or it may be smarter to specify type to parameters instead of generics
    avoid_types_on_closure_parameters: false

    # temporarily disabled
    require_trailing_commas: false

    # Too verbose. Use avoid_final_parameters
    prefer_final_parameters: false

    # Too verbose with little value, and this is taken care of by the Flutter devtool anyway.
    diagnostic_describe_all_properties: false

    # Incompatible with `prefer_final_locals`
    # Having immutable local variables makes larger functions more predictible
    # so we will use `prefer_final_locals` instead.
    unnecessary_final: false

    # Conflicts with `omit_local_variable_types` and other rules.
    # As per Dart guidelines, we want to avoid unnecessary types to make the code
    # more readable.
    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables
    always_specify_types: false

    # Conflicts with `prefer_single_quotes`
    # Single quotes are easier to type and don't compromise on readability.
    prefer_double_quotes: false

    # Adopt prefer_relative_imports
    always_use_package_imports: false

    # Use Dart-define and fromEnvironment
    do_not_use_environment: false

    # Not quite suitable for Flutter, which may have a `build` method with a single
    # return, but that return is still complex enough that a "body" is worth it.
    prefer_expression_function_bodies: false

    # Conflicts with the convention used by flutter, which puts `Key key`
    # and `@required Widget child` last.
    always_put_required_named_parameters_first: false

    # Conflicts with disabling `implicit-dynamic`
    avoid_annotating_with_dynamic: false

    # StatefulWidget will give you a warning
    library_private_types_in_public_api: false

    # For app code
    public_member_api_docs: false
    # Too verbose
    prefer_asserts_with_message: false