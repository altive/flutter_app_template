{
    "Riverpod and simple class": {
        "prefix": "riverpodAndSimpleClass",
        "body": [
            "import 'package:hooks_riverpod/hooks_riverpod.dart';",
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@Riverpod(keepAlive: true)",
            "${TM_FILENAME_BASE/(.*)/${1:/pascalcase}${2}/} ${TM_FILENAME_BASE/(.*)/${1:/camellcase}${2}/}(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}${2}/}Ref ref) =>",
            "    ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}${2}/}(ref);",
            "",
            "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}${2}/} {",
            "  const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}${2}/}(this.ref);",
            "",
            "  final Ref ref;",
            "",
            "  Future<void> call() async {",
            "    // TODO: implementation",
            "  }",
            "}",
        ],
    },
    "Riverpod from Method": {
        "prefix": "riverpodMethod",
        "body": [
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@riverpod",
            "$1 $2(${2/(.*)/${1:/pascalcase}${2}/}Ref ref) {",
            "  return ${3:value};",
            "}",
        ],
    },
    "Riverpod from Method with keepAlive": {
        "prefix": "riverpodMethodKeepAlive",
        "body": [
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@Riverpod(keepAlive: true)",
            "$1 $2(${2/(.*)/${1:/pascalcase}${2}/}Ref ref) {",
            "  return ${3:value};",
            "}",
        ],
    },
    "Riverpod from Future method": {
        "prefix": "riverpodFutureMethod",
        "body": [
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@riverpod",
            "Future<$1> $2(${2/(.*)/${1:/pascalcase}${2}/}Ref ref) async {",
            "  return ${3:value};",
            "}",
        ],
    },
    "Riverpod from Future method with keepAlive": {
        "prefix": "riverpodFutureMethodKeepAlive",
        "body": [
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@Riverpod(keepAlive: true)",
            "Future<$1> $2(${2/(.*)/${1:/pascalcase}${2}/}Ref ref) async {",
            "  return ${3:value};",
            "}",
        ],
    },
    "Riverpod NotifierProvider": {
        "prefix": "riverpodNotifierProvider",
        "body": [
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@riverpod",
            "class $1 extends _$$1 {",
            "  @override",
            "  ${2:return type} build() {",
            "    return ${3:value};",
            "  }",
            "}",
        ],
    },
    "Riverpod NotifierProvider with keepAlive": {
        "prefix": "riverpodNotifierProviderKeepAlive",
        "body": [
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@Riverpod(keepAlive: true)",
            "class $1 extends _$$1 {",
            "  @override",
            "  ${2:return type} build() {",
            "    return ${3:value};",
            "  }",
            "}",
        ],
    },
    "Riverpod AsyncNotifierProvider": {
        "prefix": "riverpodAsyncNotifierProvider",
        "body": [
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@riverpod",
            "class $1 extends _$$1 {",
            "  @override",
            "  FutureOr<${2:return type}> build() async {",
            "    return ${3:value};",
            "  }",
            "}",
        ],
    },
    "Riverpod AsyncNotifierProvider with keepAlive": {
        "prefix": "riverpodAsyncNotifierProviderKeepAlive",
        "body": [
            "import 'package:riverpod_annotation/riverpod_annotation.dart';",
            "",
            "part '${TM_FILENAME_BASE}.g.dart';",
            "",
            "@Riverpod(keepAlive: true)",
            "class $1 extends _$$1 {",
            "  @override",
            "  FutureOr<${2:return type}> build() async {",
            "    return ${3:value};",
            "  }",
            "}",
        ],
    },
}