// Dart Recommended Settings: https://dartcode.org/docs/recommended-settings/
{
	// スペルチェックから除外する単語をまとめたテキストファイルを指定する
	"cSpell.customDictionaries": {
		"altive-words": {
			"name": "altive-words",
			"path": "${workspaceRoot}/.cspell/altive-words.txt",
			"description": "Altive Words",
			"addWords": true,
			"scope": "workspace"
		},
		"flutter-words": {
			"name": "flutter-words",
			"path": "${workspaceRoot}/.cspell/flutter-words.txt",
			"description": "Flutter App Development Words",
			"addWords": true,
			"scope": "workspace"
		},
		"app-words": {
			"name": "app-words",
			"path": "${workspaceRoot}/.cspell/app-words.txt",
			"description": "Words specific to this application",
			"addWords": true,
			"scope": "workspace"
		}
	},
	// スペルチェックを行わないファイルパスを指定する
	"cSpell.ignorePaths": [
		"node_modules",
		"package-lock.json",
		"vscode-extension",
		"*.gen.dart",
		"*.lock",
		".git/objects",
		".vscode",
		".vscode-insiders",
	],
	// ONLY GLOBAL: Breakpointに到達した時、デバッグビューが自動的に表示される
	"debug.openDebug": "openOnDebugBreak",
	// 保存時にフォーマットを実行するなら`true`
	"editor.formatOnSave": true,
	// 入力した行をフォーマットを実行するなら`true`
	"editor.formatOnType": true,
	// 貼り付けした時にフォーマットを実行するなら`true`
	"editor.formatOnPaste": true,
	// 垂直ルーラーを表示する文字数の位置。複数指定可
	"editor.rulers": [
		80
	],
	// ホワイトスペース文字の表示
	"editor.renderWhitespace": "all",
	// 制御文字を表示するなら`true`
	"editor.renderControlCharacters": true,
	// ミニマップを表示するなら`true`。Default: true
	"editor.minimap.enabled": false,
	// ブラケットをペアごとに色付けするなら`true`
	"editor.bracketPairColorization.enabled": true,
	// ブラケットペアのガイド表示を有効にするなら`true`
	"editor.guides.bracketPairs": true,
	// Dartにのみ適用する設定群
	"[dart]": {
		// 選択された変数への正確な参照のみをハイライトするDartの機能を妨げないために`false`
		"editor.selectionHighlight": false,
		// 「スニペットモード」でも通常通り補完機能を効かせるために`false`
		"editor.suggest.snippetsPreventQuickSuggestions": false,
		// `first`: コード補完時に、最近使用された項目ではなく最上位の項目を提案する
		// `recentlyUsedByPrefix`: 直前のテキストに基づいて最新使用された項目をフィルタリングする
		"editor.suggestSelection": "recentlyUsedByPrefix",
		// 補完リストが表示されていなくても、<TAB>を押すことで`for`などのスニペットを補完できる
		"editor.tabCompletion": "onlySnippets",
		// コメントや文字列の編集時にコード補完が単語を示唆することある挙動を無効化する
		"editor.wordBasedSuggestions": false,
		// ファイル保存時に実行されるコードアクション
		"editor.codeActionsOnSave": [
			// インポートを整理する。
			"source.organizeImports",
			// 足りないインポートを追加する。
			"source.addMissingImports",
			// Dart fix を実行する。
			"source.fixAll",
		],
	},
	// arbファイルが保存されるたびにLocalizationファイルを再生成させる
	"dart.flutterGenerateLocalizationsOnSave": "all",
	// 使用するFlutter SDKのパスを指定
	"dart.flutterSdkPath": ".fvm/flutter_sdk",
	// 外部パッケージをデバッグ可能としてマークし、デバッグ中のステップインを可能にするなら`true`
	"dart.debugExternalPackageLibraries": false,
	// Dart SDKライブラリをデバッグ可能としてマークし、デバッグ中のステップインを可能にするなら`true`
	"dart.debugSdkLibraries": false,
	// スキップしたテストをテストツリーに表示させるなら`true`
	"dart.showSkippedTests": false,
	// pubspec.yamlが保存されるたびにpub getするなら`true`
	"dart.runPubGetOnPubspecChanges": true,
	// クラス名を変更するとファイル名も自動で変更される。always, prompt, never
	"dart.renameFilesWithClasses": "always",
	// エクスプローラでファイルやフォルダをドラッグ＆ドロップした時に確認を求めるなら`true`
	"explorer.confirmDragAndDrop": false,
	// 指定したファイルを監視から除外する
	"files.watcherExclude": {
		"**/.fvm": true
	},
	// 現在のGitリポジトリのデフォルトリモートからコミットを自動で取得するなら`true`
	// `all` に設定すると、全てのリモートから取得する
	"git.autofetch": true,
	// ステージングされた変更が無い場合に全ての変更をコミットさせる場合は`true`.
	"git.enableSmartCommit": true,
	// 検索対象から生成ファイルを除外する
	"search.exclude": {
		"**/.fvm": true,
		"**/*.freezed.dart": true,
		"**/*.g.dart": true
	}
}