name: Upload Flutter Android App
description: "Upload Flutter Android App"
author: "Muramatsu Ryunosuke (@riscait)"
inputs:
  working-directory:
    description: "working-directory. example: packages/flutter_app"
    required: false
    default: "./"
  flavor:
    description: "Flavor name"
    required: true
  package-name:
    description: "Android App Package Name"
    required: true
  build-number:
    description: "Build number"
    required: true
  release-track:
    description: "Release track. Values: alpha, beta, internal, production, internalsharing"
    default: production
    required: true
  release-status:
    description: "Release status. Values: completed, inProgress, draft, halted"
    default: completed
    required: true
  service-account-json:
    description: "service-account.json base64 encoded"
    required: true
  upload-keystore-jks:
    description: "upload-keystore.jks base64 encoded"
    required: true
  store-password:
    description: "For key.properties"
    required: true
  key-password:
    description: "For key.properties"
    required: true
  key-alias:
    description: "For key.properties"
    required: true
runs:
  using: "composite"
  steps:
    - name: Create upload-keystore.jks
      run: echo -n ${{ inputs.upload-keystore-jks }} | base64 -d > android/app/upload-keystore.jks
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Create service-account.json
      run: echo -n ${{ inputs.service-account-json }} | base64 -d > android/service-account.json
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Create key.properties
      run: |
        echo 'storeFile=upload-keystore.jks' > android/key.properties
        echo 'serviceAccountFile=service-account.json' >> android/key.properties
        echo 'storePassword=${{ inputs.store-password }}' >> android/key.properties
        echo 'keyPassword=${{ inputs.key-password }}' >> android/key.properties
        echo 'keyAlias=${{ inputs.key-alias }}' >> android/key.properties
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Building Android AppBundle
      run: flutter build appbundle --dart-define=FLAVOR=${{ inputs.flavor }} --build-number ${{ inputs.build-number }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Upload to Google Play
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: ${{ inputs.working-directory }}/android/service-account.json
        packageName: ${{ inputs.package-name }}
        releaseFiles: ${{ inputs.working-directory }}/build/app/outputs/bundle/release/app-release.aab
        track: ${{ inputs.release-track }}
        status: ${{ inputs.release-status }}
